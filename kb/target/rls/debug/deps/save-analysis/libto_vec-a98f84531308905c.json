{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48],"program":"C:\\Users\\calyp\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","to_vec","C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=a98f84531308905c","-C","extra-filename=-a98f84531308905c","--out-dir","c:\\Users\\calyp\\Documents\\EECS 396\\final\\kb\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\calyp\\Documents\\EECS 396\\final\\kb\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\calyp\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[99,58,92,85,115,101,114,115,92,99,97,108,121,112,92,68,111,99,117,109,101,110,116,115,92,69,69,67,83,32,51,57,54,92,102,105,110,97,108,92,107,98,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,116,111,95,118,101,99,45,97,57,56,102,56,52,53,51,49,51,48,56,57,48,53,99,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"to_vec","disambiguator":[5864006783881960185,714090549085009695]},"crate_root":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src","external_crates":[{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7528587287462463925,14365138709353428393]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6961983669911787511,12763790138191559993]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8881479335952209253,7175408585981261641]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10606302774101958091,6394453555634565640]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[951275427296451120,15089112833676159407]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16986482155481050220,8110678813127715211]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[14152113043115722454,14996294870991823280]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":8,"id":{"name":"unwind","disambiguator":[16544231974546559170,12284481576050828670]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[10490126003503044219,3700128015989034145]}},{"file_name":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[5553849915308501608,7293799346724567721]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":4104,"line_start":1,"line_end":156,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":4104,"line_start":1,"line_end":156,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\calyp\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\to_vec-0.1.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":48}],"decl_id":null,"docs":" `to_vec`, to_set and`to_map` are specializations of `collect` in the\n usual case where you do want these containers.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1550,"byte_end":1555,"line_start":54,"line_end":54,"column_start":11,"column_end":16},"name":"ToVec","qualname":"::ToVec","value":"ToVec<T>","parent":null,"children":[{"krate":0,"index":22}],"decl_id":null,"docs":" to_vec() method on iterators\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1672,"byte_end":1678,"line_start":57,"line_end":57,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ToVec::to_vec","value":"fn (self) -> Vec<T>","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" a more definite alternative to `collect`\n which collects an iterator's values into a Vec\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1749,"byte_end":1760,"line_start":61,"line_end":61,"column_start":11,"column_end":22},"name":"ToVecResult","qualname":"::ToVecResult","value":"ToVecResult<T, E>","parent":null,"children":[{"krate":0,"index":26}],"decl_id":null,"docs":" to_vec_result() method on iterators\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1870,"byte_end":1883,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"to_vec_result","qualname":"::ToVecResult::to_vec_result","value":"fn (self) -> Result<Vec<T>, E>","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" this collects an iterator of `Result<T,E>`\n into a result of `Result<Vec<T>,E>`\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1971,"byte_end":1976,"line_start":68,"line_end":68,"column_start":11,"column_end":16},"name":"ToMap","qualname":"::ToMap","value":"ToMap<K, V>","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" to_map() method on iterators of references\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2044,"byte_end":2050,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"to_map","qualname":"::ToMap::to_map","value":"fn (self) -> HashMap<K, V>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" collect references into a HashMap by cloning\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2134,"byte_end":2139,"line_start":74,"line_end":74,"column_start":11,"column_end":16},"name":"ToSet","qualname":"::ToSet","value":"ToSet<K>","parent":null,"children":[{"krate":0,"index":34}],"decl_id":null,"docs":" to_set() method on iterators of references\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2201,"byte_end":2207,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"to_set","qualname":"::ToSet::to_set","value":"fn (self) -> HashSet<K>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" collect values into a HashSet by cloning\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2256,"byte_end":2257,"line_start":79,"line_end":79,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2399,"byte_end":2400,"line_start":86,"line_end":86,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2567,"byte_end":2568,"line_start":93,"line_end":93,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2770,"byte_end":2771,"line_start":101,"line_end":101,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2256,"byte_end":2257,"line_start":79,"line_end":79,"column_start":25,"column_end":26},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":33},"to":{"krate":0,"index":20}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2399,"byte_end":2400,"line_start":86,"line_end":86,"column_start":35,"column_end":36},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":39},"to":{"krate":0,"index":24}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2567,"byte_end":2568,"line_start":93,"line_end":93,"column_start":33,"column_end":34},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":47},"to":{"krate":0,"index":28}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,99,97,108,121,112,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,116,111,95,118,101,99,45,48,46,49,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2770,"byte_end":2771,"line_start":101,"line_end":101,"column_start":29,"column_end":30},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":53},"to":{"krate":0,"index":32}}]}